apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.3"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

ext {
    jacocoExclusion = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '',
            // BEGIN DAGGER
            '**/di/*',
            '**/Dagger*',
            '**/*_MembersInjector*',
            '**/*_Factory*'
            // END DAGGER
    ]
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage report"

    reports {
        html.enabled = true
        xml.enabled = false
    }

    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: jacocoExclusion)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec") +
            fileTree(dir: "${buildDir}/outputs/code_coverage/debugAndroidTest/connected", include: ["**/*coverage.ec"])

    doLast {
        println "Jacoco coverage report has been generated to file://${reports.html.destination}/index.html"
    }
}